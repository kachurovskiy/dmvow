<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="onCreationComplete(event)" 
	xmlns:itemsFilter="ru.dmvow.view.sidePanels.filtersList.itemsFilter.*"
	width="100%"
	height="100%"
	>
	<itemsFilter:MustHaveToggle id="mustHaveToggle"/>
	<mx:Label left="18" text="{itemPattern.itemName}"/>
	<mx:Label text="~" selectable="false" color="0x888888" horizontalCenter="0"/>
	<mx:ComboBox y="0" width="125" height="18" id="valueComboBox" change="onValueComboBoxChange(event);" right="2"/>
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.ChangeWatcher;
			import mx.binding.utils.BindingUtils;
			import ru.dmvow.model.view.processingList.items.itemsFilter.ItemPattern;
			
			private var _itemPattern:ItemPattern;
			private var watcher:ChangeWatcher;
			
			[Bindable]
			public function set itemPattern(value:ItemPattern):void
			{
				if (_itemPattern && watcher)
					watcher.unwatch();
				
				_itemPattern = value;
				
				if (_itemPattern)
				{
					mustHaveToggle.mustHave = _itemPattern.mustHave;
					
					valueComboBox.dataProvider = itemPattern.availableValues;
					if (value.itemValue)
					{
						var index:Number = itemPattern.availableValues.indexOf(value.itemValue);
						valueComboBox.selectedIndex = index;
					}
					else
						valueComboBox.selectedIndex = 0;
					
					watcher = BindingUtils.bindProperty(itemPattern, "mustHave", mustHaveToggle, "mustHave");
				}
			}
		
			public function get itemPattern():ItemPattern
			{
				return _itemPattern;
			}
		
			private function onCreationComplete(event:Event):void
			{
				BindingUtils.bindProperty(this, "itemPattern", this, "data");
			}
			
			private function onValueComboBoxChange(event:Event):void
			{
				if (valueComboBox.selectedIndex == 0)
					itemPattern.itemValue = null;
				else
					itemPattern.itemValue = valueComboBox.selectedLabel;
			}
		]]>
	</mx:Script>
</mx:Canvas>
