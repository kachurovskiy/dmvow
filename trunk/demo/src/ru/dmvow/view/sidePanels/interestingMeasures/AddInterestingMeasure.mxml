<?xml version="1.0" encoding="utf-8"?>
<mx:Panel
	title="Creating new complex interesting measure" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical"
	creationComplete="onCreationComplete(event)"
	paddingTop="5"
	paddingRight="5"
	paddingBottom="5"
	paddingLeft="5"
	width="700"
	>
	<mx:VBox width="100%">
		<mx:Text width="100%">
			<mx:text>
				Here you can create the new complex interesting measure by using the following 
				checkboxes. If the 'Enabled' checkbox if checked, this simple measure will be 
				included in the complex measure. If the 'Is Up' checkbox in the simple measure
				is checked, then we are interested in highest values of the measure.
			</mx:text>
		</mx:Text>
		<mx:List
			id="list"
			width="100%" 
			rowCount="5"
			alternatingItemColors="[0xf0f0f0, 0xf5f5f5]"  
			/>
	</mx:VBox>
	<mx:HBox>
		<mx:Label text="Name:"/>
		<mx:TextInput id="nameInput" width="200" backgroundColor="0xFFFFFF" backgroundAlpha="1"/> 
		<mx:Button id="saveButton" label="Save" click="onSave(event)"/>
		<mx:Button id="cancelButton" label="Cancel" click="onCancel(event)"/>
	</mx:HBox>
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import ru.dmvow.events.sidePanels.SidePanelsEvent;
			import ru.dmvow.model.view.interestingMeasures.InterestingMeasure;
			import mx.events.CollectionEvent;
			import mx.collections.IList;
			import mx.core.DragSource;
			import ru.dmvow.model.view.interestingMeasures.SimpleMeasure;
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			import mx.core.IUIComponent;
			import mx.containers.Canvas;
			import mx.managers.DragManager;
			
			private var dataProvider:ArrayCollection;
			
			private function getCurrentMeasures():Array
			{
				var usedMeasures:Array = new Array();
				for (var i:Number = 0; i < dataProvider.length; i++)
				{
					var simpleMeasure:SimpleMeasure = SimpleMeasure(dataProvider.getItemAt(i)); 
					if (simpleMeasure.enabled)
						usedMeasures.push(simpleMeasure);
				}
				
				return usedMeasures;
			}
			
			private function onCreationComplete(event:Event):void
			{
				list.itemRenderer = new ClassFactory(MeasureItemRenderer);
				
				dataProvider = new ArrayCollection();
				dataProvider.addItem(new SimpleMeasure(SimpleMeasure.SUPPORT));
				dataProvider.addItem(new SimpleMeasure(SimpleMeasure.CONFIDENCE));
				dataProvider.addItem(new SimpleMeasure(SimpleMeasure.COVERAGE));
				dataProvider.addItem(new SimpleMeasure(SimpleMeasure.LEVERAGE));
				dataProvider.addItem(new SimpleMeasure(SimpleMeasure.LIFT));
				dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, onDataProviderChange, false, 0, true); 
				list.dataProvider = dataProvider;
			}
			
			private function onDataProviderChange(event:CollectionEvent):void
			{
				var currMeasures:Array = getCurrentMeasures();
				
				nameInput.text = currMeasures.join(" ");
				
				saveButton.enabled = (currMeasures.length > 0);
			}
			
			private function onSave(event:Event):void
			{
				var measure:InterestingMeasure = new InterestingMeasure();
				measure.simpleMeasures = new ArrayCollection(getCurrentMeasures());
				
				PopUpManager.removePopUp(this);
				
				var newEvent:SidePanelsEvent = new SidePanelsEvent(SidePanelsEvent.ADD_INTERESTING_MEASURE);
				newEvent.data = measure;
				newEvent.dispatch();
			}
			
			private function onCancel(event:Event):void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:Panel>
